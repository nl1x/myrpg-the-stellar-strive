name: Paint_au_chocolat

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  EXECUTABLES: "my_rpg"

jobs:
  check_coding_style:
    name: Check if there are coding style errors in the repository (stop if any).
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: Check the content of the current repository.
        uses: actions/checkout@v4

      - name: Check coding-style-report.log and display errors (if any).
        run: |
          check.sh $(pwd) $(pwd)
          SUCCESS=0
          while read line; do
            filename=$(echo "$line" | awk -F ':' '{print $1}')
            line_number=$(echo "$line" | awk -F ':' '{print $2}')
            type_error=$(echo "$line" | awk -F ':' '{print $3}')
            error=$(echo "$line" | awk -F ':' '{print $4}')
            title=$(echo "$type_error coding style error")
            echo ::error file=$filename,line=$line_number,title=$title::$error
            SUCCESS=1
          done < coding-style-reports.log
          exit $SUCCESS

  check_program_compilation:
    name: Check if the program compile (stop if not).
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker

    steps:
      - name: Check the content of the current repository.
        uses: actions/checkout@v4

      - name: Launch make at the root of the repository (have a 2 minutes timeout).
        run: make
        timeout-minutes: 2

      - name: Clean repository with "make clean" at the root of the repository.
        run: make clean

      - name: Verify that each file specified in the EXECUTABLES environment variable exists and is executable.
        run: |
          IFS=',' read -ra EXECUTABLES_ARRAY <<< "$EXECUTABLES"
          for executable in "${EXECUTABLES_ARRAY[@]}"; do
            if [ ! -x "$executable" ]; then
              echo "Error: $executable does not exist or is not executable."
              exit 1
            fi
          done

  run_tests:
    name: Launch "make tests_run" at the root of the repository.
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker

    steps:
      - name: Check the content of the current repository.
        uses: actions/checkout@v4
      - name: Launch "make test_run"
        run: make tests_run
        timeout-minutes: 2